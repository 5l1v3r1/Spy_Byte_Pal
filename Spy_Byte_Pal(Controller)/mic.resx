<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>